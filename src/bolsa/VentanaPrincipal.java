/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bolsa;

import clases.BaseDeDatos;
import clases.Tablas.Categoria;
import clases.Tablas.Categorias;
import clases.Tablas.Valor;
import clases.Tablas.Valores;
import java.sql.Connection;

/**
 *
 * @author Ignacio
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    //Atributos
    Connection conexion;
    Categorias categorias;
    Valores    valores;
    
    /**
     * Creates new form VentanaPrincipal
     */
    public VentanaPrincipal() {
        //Inicializa Componentes
        initComponents();
        
        //Centramos la ventana
        setLocationRelativeTo(null);
        
        //Ponemos el Layout (Dise√±o) a Nulo
        this.setLayout(null);
        
        //Conectamos a la Base de Datos
        conectaBaseDeDatos();
        
        //Inicializamos las Categorias
        inicializaCategorias();
        
        //Inicializamos los Valores
        inicializaValores();
    }
    
    //Conectamos a la Base de Datos (Cargamos el Objeto conexion)
    private void conectaBaseDeDatos(){
        //Iniciamos la Conexion a la Base de Datos
        BaseDeDatos bd = new BaseDeDatos();
        conexion = bd.getConexion();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jCBCategorias = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jCBValores = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jCBCategorias.setEditable(true);
        jCBCategorias.setToolTipText("");
        jCBCategorias.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCBCategoriasItemStateChanged(evt);
            }
        });

        jLabel1.setText("Conjunto:");

        jLabel2.setText("Valor:");

        jCBValores.setEditable(true);
        jCBValores.setToolTipText("");
        jCBValores.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCBValoresItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCBCategorias, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCBValores, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jCBCategorias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jCBValores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 549, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 334, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCBCategoriasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCBCategoriasItemStateChanged

        //Una vez Desmarcado el Valor Seleccionado
        if (evt.getStateChange() == java.awt.event.ItemEvent.DESELECTED){
            //Cargamos los Valores Asociados a la Categoria Seleccionada
            inicializaValores();
        }
    }//GEN-LAST:event_jCBCategoriasItemStateChanged

    private void jCBValoresItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCBValoresItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jCBValoresItemStateChanged

    private void inicializaCategorias(){
        //Cargamos la Tabla de Categorias desde la BBDD
        cargaTablaCategorias();
        
        //Cargamos el Combo Box de Categorias
        cargarComboBoxCategorias();
    }
    
    //Cargamos la Tabla de Categorias desde la BBDD
    private void cargaTablaCategorias(){
        //Cargamos la Tabla de Categorias desde la BBDD
        categorias = new Categorias(conexion);
        
        //Actualiza los Datos de cada Categoria desde la Web MegaBolsa
        categorias.actualizaDatosCategorias(conexion);
    }
    //Cargamos el Combo Box de Categorias
    private void cargarComboBoxCategorias(){
        //Inicializamos el ComboBox (Solo si ya hay Informacion de Anterioridad)
        if (jCBCategorias.getItemCount() != 0)
            jCBCategorias = new javax.swing.JComboBox();

        //Recorremos el ArrayList de categorias
        for (Categoria categoria:categorias.getCategorias()){
            //Cargamos en el ComboBox la Descripcion de Categorias
            jCBCategorias.addItem(categoria.getDescripcion());
        }
        //Marcamos por defecto el Primero Item como Seleccionado
        jCBCategorias.setSelectedIndex(0);
    }
    //Obtiene el Codigo de la Categoria Seleccionada
    private String getCategoria(){
        String codCategoria = categorias.getCategorias().get(jCBCategorias.getSelectedIndex()).getCodCategoria();
        return codCategoria;
    }

    private void inicializaValores(){
        //Cargamos la Tabla de Valores desde la BBDD
        cargaTablaValores();
        
        //Cargamos el Combo Box de Valores
        cargarComboBoxValores();
    }
    //Cargamos la Tabla de Valores desde la BBDD filtrando por Categoria
    private void cargaTablaValores(){
        valores = new Valores(conexion, getCategoria());
    }
    //Cargamos el Combo Box de Categorias
    private void cargarComboBoxValores(){
        //Inicializamos el ComboBox (Solo si ya hay Informacion de Anterioridad)
        if (jCBValores.getItemCount() != 0)
            jCBValores.removeAllItems();

        //Recorremos el ArrayList de Valores
        for (Valor valor:valores.getValores()){
            //Cargamos en el ComboBox la Descripcion del Valor
            jCBValores.addItem(valor.getDescripcion());
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox jCBCategorias;
    private javax.swing.JComboBox jCBValores;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
